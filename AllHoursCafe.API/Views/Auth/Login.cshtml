@model AllHoursCafe.API.Models.LoginViewModel

@{
    ViewData["Title"] = "Login";
}

@section Styles {
    <link rel="stylesheet" href="/css/auth.css" />
}

<div class="auth-container">
    <div class="auth-form">
        <h2>Welcome Back</h2>
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
        }
        <form asp-action="Login" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Email">Email Address</label>
                <input asp-for="Email" class="form-control" placeholder="Enter your email" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password">Password</label>
                <input asp-for="Password" class="form-control" placeholder="Enter your password" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="checkbox">
                    <label>
                        <input asp-for="RememberMe" /> @Html.DisplayNameFor(m => m.RememberMe)
                    </label>
                </div>
                <div class="forgot-password">
                    <a asp-action="ForgotPassword">Forgot your password?</a>
                </div>
            </div>
            <button type="submit">Login</button>
            <div class="form-footer">
                <p>Don't have an account? <a asp-action="Signup">Sign up here</a></p>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Check if there's a returnUrl in sessionStorage
            var returnUrl = sessionStorage.getItem('returnUrl');
            if (returnUrl) {
                // Add a hidden input field with the returnUrl
                var form = document.querySelector('form');
                var input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'returnUrl';
                input.value = returnUrl;
                form.appendChild(input);

                // Clear the returnUrl from sessionStorage
                sessionStorage.removeItem('returnUrl');
            }
        });
    </script>
}