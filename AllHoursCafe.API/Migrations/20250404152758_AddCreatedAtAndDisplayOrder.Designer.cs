// <auto-generated />
using System;
using AllHoursCafe.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AllHoursCafe.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250404152758_AddCreatedAtAndDisplayOrder")]
    partial class AddCreatedAtAndDisplayOrder
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AllHoursCafe.API.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 4, 4, 15, 27, 57, 766, DateTimeKind.Utc).AddTicks(9240),
                            Description = "Start your day right with our delicious breakfast options",
                            DisplayOrder = 0,
                            ImageUrl = "/images/categories/breakfast.jpg",
                            IsActive = true,
                            Name = "Breakfast"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 4, 4, 15, 27, 57, 766, DateTimeKind.Utc).AddTicks(9240),
                            Description = "Perfect midday meals to keep you going",
                            DisplayOrder = 0,
                            ImageUrl = "/images/categories/lunch.jpg",
                            IsActive = true,
                            Name = "Lunch"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 4, 4, 15, 27, 57, 766, DateTimeKind.Utc).AddTicks(9250),
                            Description = "End your day with our satisfying dinner selections",
                            DisplayOrder = 0,
                            ImageUrl = "/images/categories/dinner.jpg",
                            IsActive = true,
                            Name = "Dinner"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 4, 4, 15, 27, 57, 766, DateTimeKind.Utc).AddTicks(9250),
                            Description = "Refreshing drinks and beverages",
                            DisplayOrder = 0,
                            ImageUrl = "/images/categories/beverages.jpg",
                            IsActive = true,
                            Name = "Beverages"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 4, 4, 15, 27, 57, 766, DateTimeKind.Utc).AddTicks(9250),
                            Description = "Sweet treats to satisfy your cravings",
                            DisplayOrder = 0,
                            ImageUrl = "/images/categories/desserts.jpg",
                            IsActive = true,
                            Name = "Desserts"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 4, 4, 15, 27, 57, 766, DateTimeKind.Utc).AddTicks(9250),
                            Description = "Light bites and quick snacks",
                            DisplayOrder = 0,
                            ImageUrl = "/images/categories/snacks.jpg",
                            IsActive = true,
                            Name = "Snacks"
                        });
                });

            modelBuilder.Entity("AllHoursCafe.API.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("Calories")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsGlutenFree")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsVegan")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsVegetarian")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PrepTimeMinutes")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SpicyLevel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("AllHoursCafe.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("PostalCode")
                        .HasColumnType("longtext");

                    b.Property<string>("PreferredLanguage")
                        .HasColumnType("longtext");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AllHoursCafe.API.Models.MenuItem", b =>
                {
                    b.HasOne("AllHoursCafe.API.Models.Category", "Category")
                        .WithMany("MenuItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AllHoursCafe.API.Models.Category", b =>
                {
                    b.Navigation("MenuItems");
                });
#pragma warning restore 612, 618
        }
    }
}
